# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@5

jobs:
  run_unit_tests_backend:
    docker:
      - image: cimg/node:16.16
      - image: circleci/mongo:5.0
        environment:
          MONGO_USERNAME: baodeptrai
          MONGO_PASSWORD: 123456
    steps:
      - checkout
      - run:
          name: MongoDB Install
          command: |
             sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
             echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
             sudo apt-get update
             sudo apt-get install -y mongodb-org-shell
      - setup_remote_docker
      - run:
          name: Waiting for Mongo
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Create database
          command: |
              mongo --eval "db = db.getSiblingDB('nasa'); db.user.insertMany([{ hello : 'world'}]); db.createUser({ user: 'baodeptrai', pwd: '123456', roles: [{ role: 'readWrite', db: 'nasa' }] });"
      - run: cd server && yarn
      - run:
          name: Run unit tests on Circle
          command: |
            cd server && yarn test
  run_unit_tests_frontend:
    docker:
      - image: cimg/node:16.16
    steps:
      - checkout
      - run: cd client && yarn
      - run:
          name: Run unit tests on Circle
          command: |
            cd client && yarn test
workflows:
  build_tests:
    jobs:
      - run_unit_tests_backend
      - run_unit_tests_frontend

